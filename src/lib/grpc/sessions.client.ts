// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "sessions.proto" (package "authentication", syntax proto3)
// tslint:disable
//
//-- ./proto/sessions.proto
//
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { SessionsService } from "./sessions";
import type { SessionsDeleteUserRequest } from "./sessions";
import type { SessionsDeleteResponse } from "./sessions";
import type { SessionsDeleteRequest } from "./sessions";
import type { Empty } from "./common";
import type { SessionsRevokeUserRequest } from "./sessions";
import type { SessionsRevokeResponse } from "./sessions";
import type { SessionsRevokeRequest } from "./sessions";
import type { SessionsIndexResponse } from "./sessions";
import type { SessionsIndexRequest } from "./sessions";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { SessionsResponse } from "./sessions";
import type { SessionsReadRequest } from "./sessions";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service authentication.SessionsService
 */
export interface ISessionsServiceClient {
    /**
     * @generated from protobuf rpc: Read(authentication.SessionsReadRequest) returns (authentication.SessionsResponse);
     */
    read(input: SessionsReadRequest, options?: RpcOptions): UnaryCall<SessionsReadRequest, SessionsResponse>;
    /**
     * @generated from protobuf rpc: Index(authentication.SessionsIndexRequest) returns (authentication.SessionsIndexResponse);
     */
    index(input: SessionsIndexRequest, options?: RpcOptions): UnaryCall<SessionsIndexRequest, SessionsIndexResponse>;
    /**
     * @generated from protobuf rpc: Revoke(authentication.SessionsRevokeRequest) returns (authentication.SessionsRevokeResponse);
     */
    revoke(input: SessionsRevokeRequest, options?: RpcOptions): UnaryCall<SessionsRevokeRequest, SessionsRevokeResponse>;
    /**
     * @generated from protobuf rpc: RevokeUser(authentication.SessionsRevokeUserRequest) returns (authentication.SessionsRevokeResponse);
     */
    revokeUser(input: SessionsRevokeUserRequest, options?: RpcOptions): UnaryCall<SessionsRevokeUserRequest, SessionsRevokeResponse>;
    /**
     * @generated from protobuf rpc: RevokeAll(authentication.Empty) returns (authentication.SessionsRevokeResponse);
     */
    revokeAll(input: Empty, options?: RpcOptions): UnaryCall<Empty, SessionsRevokeResponse>;
    /**
     * @generated from protobuf rpc: Delete(authentication.SessionsDeleteRequest) returns (authentication.SessionsDeleteResponse);
     */
    delete(input: SessionsDeleteRequest, options?: RpcOptions): UnaryCall<SessionsDeleteRequest, SessionsDeleteResponse>;
    /**
     * @generated from protobuf rpc: DeleteUser(authentication.SessionsDeleteUserRequest) returns (authentication.SessionsDeleteResponse);
     */
    deleteUser(input: SessionsDeleteUserRequest, options?: RpcOptions): UnaryCall<SessionsDeleteUserRequest, SessionsDeleteResponse>;
    /**
     * @generated from protobuf rpc: DeleteAll(authentication.Empty) returns (authentication.SessionsDeleteResponse);
     */
    deleteAll(input: Empty, options?: RpcOptions): UnaryCall<Empty, SessionsDeleteResponse>;
}
/**
 * @generated from protobuf service authentication.SessionsService
 */
export class SessionsServiceClient implements ISessionsServiceClient, ServiceInfo {
    typeName = SessionsService.typeName;
    methods = SessionsService.methods;
    options = SessionsService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Read(authentication.SessionsReadRequest) returns (authentication.SessionsResponse);
     */
    read(input: SessionsReadRequest, options?: RpcOptions): UnaryCall<SessionsReadRequest, SessionsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<SessionsReadRequest, SessionsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Index(authentication.SessionsIndexRequest) returns (authentication.SessionsIndexResponse);
     */
    index(input: SessionsIndexRequest, options?: RpcOptions): UnaryCall<SessionsIndexRequest, SessionsIndexResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<SessionsIndexRequest, SessionsIndexResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Revoke(authentication.SessionsRevokeRequest) returns (authentication.SessionsRevokeResponse);
     */
    revoke(input: SessionsRevokeRequest, options?: RpcOptions): UnaryCall<SessionsRevokeRequest, SessionsRevokeResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<SessionsRevokeRequest, SessionsRevokeResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RevokeUser(authentication.SessionsRevokeUserRequest) returns (authentication.SessionsRevokeResponse);
     */
    revokeUser(input: SessionsRevokeUserRequest, options?: RpcOptions): UnaryCall<SessionsRevokeUserRequest, SessionsRevokeResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<SessionsRevokeUserRequest, SessionsRevokeResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RevokeAll(authentication.Empty) returns (authentication.SessionsRevokeResponse);
     */
    revokeAll(input: Empty, options?: RpcOptions): UnaryCall<Empty, SessionsRevokeResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, SessionsRevokeResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Delete(authentication.SessionsDeleteRequest) returns (authentication.SessionsDeleteResponse);
     */
    delete(input: SessionsDeleteRequest, options?: RpcOptions): UnaryCall<SessionsDeleteRequest, SessionsDeleteResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<SessionsDeleteRequest, SessionsDeleteResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteUser(authentication.SessionsDeleteUserRequest) returns (authentication.SessionsDeleteResponse);
     */
    deleteUser(input: SessionsDeleteUserRequest, options?: RpcOptions): UnaryCall<SessionsDeleteUserRequest, SessionsDeleteResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<SessionsDeleteUserRequest, SessionsDeleteResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteAll(authentication.Empty) returns (authentication.SessionsDeleteResponse);
     */
    deleteAll(input: Empty, options?: RpcOptions): UnaryCall<Empty, SessionsDeleteResponse> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, SessionsDeleteResponse>("unary", this._transport, method, opt, input);
    }
}
